name: Build and deploy

on:
  push:
    branches: [ master, release ]

env:
  API_DIR: TodoApi.Server
  API_PROJECT_PATH: TodoApi.Server/TodoApi.Server.csproj
  API_OUTPUT_DIR: dist
  DOTNET_VERSION: 3.1.300
  CLIENT_DIR: todoapi-client
  CLIENT_OUTPUT_DIR: todoapi-client/dist
  NODE_VERSION: 12.x
  VUE_CLI_VERSION: 4.4.1
  VUE_CLI_SERVICE_VERSION: 4.4.1
  API_WEBAPP_NAME: vueaspnetcoreapi

jobs:
  build-api:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
    - name: Install dependencies
      run: dotnet restore
      working-directory: ${{ env.API_DIR }}
    - name: Publish
      run: dotnet publish ${{ env.API_PROJECT_PATH }} --configuration Release --no-restore --output ${{ env.API_OUTPUT_DIR }}
      working-directory: ${{ env.API_DIR }}
    - name: Test
      run: dotnet test --no-restore --verbosity normal
      working-directory: ${{ env.API_DIR }}
    - name: Archive
      uses: actions/upload-artifact@v1
      with:
        name: api
        path: ${{ env.API_DIR }}/${{ env.API_OUTPUT_DIR }}

  build-client:
    runs-on: windows-latest
    
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: npm install, build, and test
        run: |
          npm install
          npm run build
          npm run test
        working-directory: ${{ env.CLIENT_DIR }}
      - name: Archive
        uses: actions/upload-artifact@v1
        with:
          name: client
          path: ${{ env.CLIENT_OUTPUT_DIR }}

  deploy-client-to-azure:
    runs-on: ubuntu-latest
    needs: [build-client]
    if: github.event_name == 'push' && github.ref == 'refs/heads/release'
    
    steps:
      - uses: actions/checkout@v2
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v0.0.1-preview
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_BRAVE_DESERT_0F4BC1300 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: 'upload'
          app_location: ${{ env.CLIENT_DIR }}
          app_artifact_location: 'dist'

  deploy-api-to-azure:
    runs-on: windows-latest
    needs: [build-api]
    if: github.event_name == 'push' && github.ref == 'refs/heads/release'
    
    steps:
      - name: Download archives
        uses: actions/download-artifact@v2
        with:
          name: api
          
      # Deploy to Azure Web apps
      - name: 'Run Azure webapp deploy action using publish profile credentials'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.API_WEBAPP_NAME }} # Replace with your app name
          publish-profile: ${{ secrets.AZURE_WEB_APP_API_PUBLISH_PROFILE  }} # Define secret variable in repository settings as per action documentation
          package: '.'

    
